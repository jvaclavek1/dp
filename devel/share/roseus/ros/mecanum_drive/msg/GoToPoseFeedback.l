;; Auto-generated. Do not edit!


(when (boundp 'mecanum_drive::GoToPoseFeedback)
  (if (not (find-package "MECANUM_DRIVE"))
    (make-package "MECANUM_DRIVE"))
  (shadow 'GoToPoseFeedback (find-package "MECANUM_DRIVE")))
(unless (find-package "MECANUM_DRIVE::GOTOPOSEFEEDBACK")
  (make-package "MECANUM_DRIVE::GOTOPOSEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude GoToPoseFeedback.msg.html


(defclass mecanum_drive::GoToPoseFeedback
  :super ros::object
  :slots (_processing ))

(defmethod mecanum_drive::GoToPoseFeedback
  (:init
   (&key
    ((:processing __processing) nil)
    )
   (send-super :init)
   (setq _processing __processing)
   self)
  (:processing
   (&optional (__processing :null))
   (if (not (eq __processing :null)) (setq _processing __processing)) _processing)
  (:serialization-length
   ()
   (+
    ;; bool _processing
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _processing
       (if _processing (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _processing
     (setq _processing (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get mecanum_drive::GoToPoseFeedback :md5sum-) "14c43fbec2ed75ad470309f9d3538198")
(setf (get mecanum_drive::GoToPoseFeedback :datatype-) "mecanum_drive/GoToPoseFeedback")
(setf (get mecanum_drive::GoToPoseFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# feedback
bool processing



")



(provide :mecanum_drive/GoToPoseFeedback "14c43fbec2ed75ad470309f9d3538198")


